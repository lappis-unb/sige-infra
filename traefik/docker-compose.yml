
services:
  traefik:
    container_name: ${CONTAINER_NAME}
    image: ${IMAGE}:${IMAGE_TAG}
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.network=proxy-network"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.leprod.acme.httpchallenge=true"
      - "--certificatesresolvers.leprod.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.leprod.acme.storage=/etc/traefik/ssl-certs/acme.json"
      - "--certificatesresolvers.leprod.acme.email=${EMAIL}"
    ports: 
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/ssl-certs/:/etc/traefik/ssl-certs/
      - ./config/users:/etc/traefik/users
    labels:
      traefik.enable: "true"
      traefik.http.routers.dashboard.service: "api@internal"
      traefik.http.routers.dashboard.rule: "Host(`${HOSTNAME}`)"
      traefik.http.routers.dashboard.entrypoints: "websecure"
      traefik.http.routers.dashboard.middlewares: "auth"
      traefik.http.middlewares.auth.basicauth.usersfile: "/etc/traefik/users"
      traefik.http.routers.dashboard.tls.certresolver: "leprod"
    networks:
      - proxy-network

networks:
  proxy-network:
    name: proxy-network
    driver: bridge
